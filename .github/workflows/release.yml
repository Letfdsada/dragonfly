name: Version Release

  #on:
  #  push:
  #    tags:
  #    - 'v*'
  #
on:
  # push:
  # branches: [ main ]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          tag: temp
          allowUpdates: true
          omitBody: true
          prerelease: true
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    strategy:
      matrix:
        # Test of these containers
        container: ["ubuntu-dev:20"]
        runner: [[], [linux, ARM64]]
        include:
          - runner: [linux, ARM64]
            df-binary-name: dragonfly-aarch64
            platform: aarch64
            name: dragonfly-aarch64
          - runner: []
            df-binary-name: dragonfly-x86_64
            platform: x86_64
            name: dragonfly-amd64
    runs-on: ${{ matrix.runner }}
    container:
      image: ghcr.io/romange/${{ matrix.container }}
    name: Build ${{ matrix.platform }} on ubuntu20.04
    needs: create-release
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true
    - name: Build artifacts
      run: |
          # Work around https://github.com/actions/checkout/issues/766
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git describe --always --tags ${{ github.sha }}
          ./tools/release.sh
          ls -lah build-opt
          apt update && apt install -y debhelper moreutils pip jq
          ./tools/packaging/generate_debian_package.sh build-opt/${{ matrix.df-binary-name}}
          mv dragonfly_*.deb build-opt/
    - name: Run regression tests
      uses: ./.github/actions/regression-tests
      with:
        dfly-executable: ${{ matrix.df-binary-name }}
        gspace-secret: ${{ secrets.GSPACES_BOT_DF_BUILD }}
        run-only-on-ubuntu-latest: false
        build-folder-name: build-opt
    - name: Save artifacts
      run: |
          # place all artifacts at the same location
          mkdir -p results-artifacts
          mv build-opt/dragonfly-*tar.gz results-artifacts
          mv dragonfly_*.deb results-artifacts
    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: results-artifacts/*

          #  publish_release:
          #    runs-on: ubuntu-latest
          #    needs: [build]
          #    steps:
          #      - uses: actions/download-artifact@v3
          #        name: Download files
          #        with:
          #          path: artifacts
          #      - name: See all the artifacts
          #        run: |
          #          ls -lR artifacts/
          #      - uses: ncipollo/release-action@v1
          #        with:
          #          artifacts: "artifacts/dragonfly-*/*"
          #          allowUpdates: true
          #          draft: true
          #          prerelease: true
          #          omitNameDuringUpdate: true
          #          token: ${{ secrets.GITHUB_TOKEN }}
