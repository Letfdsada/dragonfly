name: Regression Tests

on:
  schedule:
    - cron: '0 0/3 * * *'
  workflow_dispatch:




jobs:
  build-n-test:
    strategy:
      matrix:
        # Test of these containers
        container: ["ubuntu-dev:20"]
        build-type: [Debug, Release]
        runner: [ubuntu-latest, [self-hosted, linux, ARM64]]
    runs-on: ${{ matrix.runner }}
    timeout-minutes: 45

    container:
      image: ghcr.io/romange/${{ matrix.container }}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Print cpu info
        run:  cat /proc/cpuinfo

      - name: Configure & Build
        run: |
          apt update && apt install -y pip && apt install -y jq
          cmake -B ${GITHUB_WORKSPACE}/build -DCMAKE_BUILD_TYPE=${{matrix.build-type}} -GNinja \
                -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

          cd ${GITHUB_WORKSPACE}/build  && ninja dragonfly
          pwd
          ls -l ..

      - name: Run PyTests
        id: pytest
        timeout-minutes: 10
        run: |
          ls -l ${GITHUB_WORKSPACE}/
          cd ${GITHUB_WORKSPACE}/tests
          echo "Current commit is ${{github.sha}}"
          pip install -r dragonfly/requirements.txt
          export DRAGONFLY_PATH="${GITHUB_WORKSPACE}/build/dragonfly" # used by PyTests
          pytest --json-report --json-report-file=pytest_report.json -svr dragonfly --ignore=dragonfly/replication_test.py
      - name: Run PyTests replication test
        id: replication_pytest
        if: ${{ matrix.runner  == 'ubuntu-latest' }}
        timeout-minutes: 15
        run: |
          cd ${GITHUB_WORKSPACE}/tests
          export DRAGONFLY_PATH="${GITHUB_WORKSPACE}/build/dragonfly" # used by PyTests
          pytest --json-report --json-report-file=rep1_report.json -vs dragonfly/replication_test.py --df alsologtostderr --df enable_multi_shard_sync=true
          pytest --json-report --json-report-file=rep2_report.json -vs dragonfly/replication_test.py --df alsologtostderr --df enable_multi_shard_sync=false

      - name: Send summary to Google Chat
        if: failure() || cancelled()
        run: |
          failed_tests=""
          if [ -f pytest_report.json ]; then
            failed_tests=$(jq -r '.tests[] | select(.outcome == "failed") | .nodeid' pytest_report.json)
          fi
          curl -s \
            -X POST \
            -H 'Content-Type: application/json' \
            '${{ secrets.GSPACES_BOT_DF_BUILD }}' \
            -d '{"text": "Regression tests failed.\n The commit is ${{github.sha}}.\n $failed_tests "}'
